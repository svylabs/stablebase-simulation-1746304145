{
  "sequence": [
    {
      "type": "deploy",
      "contract": "Constants",
      "constructor": "null",
      "function": "constructor",
      "ref_name": "Constants",
      "params": []
    },
    {
      "type": "deploy",
      "contract": "DFIREStaking",
      "constructor": "constructor(bool _rewardSenderActive) Ownable(msg.sender) {\n        rewardSenderActive = _rewardSenderActive;\n    }",
      "function": "constructor",
      "ref_name": "DFIREStaking",
      "params": [
        {
          "name": "_rewardSenderActive",
          "value": "msg.sender",
          "type": "val"
        }
      ]
    },
    {
      "type": "deploy",
      "contract": "DFIREToken",
      "constructor": "constructor() Ownable(msg.sender) ERC20(\"D.FIRE\", \"DFIRE\") { Initializes the contract, setting the deployer as the owner and initializing the ERC20 token with the name \"D.FIRE\" and symbol \"DFIRE\". }",
      "function": "constructor",
      "ref_name": "DFIREToken",
      "params": []
    },
    {
      "type": "deploy",
      "contract": "StabilityPool",
      "constructor": "constructor(bool _rewardSenderActive) Ownable(msg.sender) {\n        rewardSenderActive = _rewardSenderActive;\n    }",
      "function": "constructor",
      "ref_name": "StabilityPool",
      "params": [
        {
          "name": "_rewardSenderActive",
          "value": "msg.sender",
          "type": "val"
        }
      ]
    },
    {
      "type": "deploy",
      "contract": "DFIDToken",
      "constructor": "constructor() Ownable(msg.sender) ERC20(\"D.FI Dollar\", \"DFID\") {}",
      "function": "constructor",
      "ref_name": "DFIDToken",
      "params": []
    },
    {
      "type": "deploy",
      "contract": "StableBaseCDP",
      "constructor": "constructor() StableBase() {}",
      "function": "constructor",
      "ref_name": "StableBaseCDP",
      "params": []
    },
    {
      "type": "deploy",
      "contract": "OrderedDoublyLinkedList",
      "constructor": "constructor() Ownable(msg.sender) {\n        head = 0;\n        tail = 0;\n    }",
      "function": "constructor",
      "ref_name": "OrderedDoublyLinkedList",
      "params": []
    },
    {
      "type": "deploy",
      "contract": "ReenterDfireStaking",
      "constructor": "constructor(address _dfireStaking, address _dfireStakingToken) {\n        dfireStaking = IDFIREStaking(_dfireStaking);\n        stakeToken = IERC20(_dfireStakingToken);\n    }",
      "function": "constructor",
      "ref_name": "ReenterDfireStaking",
      "params": [
        {
          "name": "_dfireStaking",
          "value": "address(DFIREStaking)",
          "type": "val"
        },
        {
          "name": "_dfireStakingToken",
          "value": "address(DFIREToken)",
          "type": "val"
        }
      ]
    },
    {
      "type": "deploy",
      "contract": "ReenterStabilityPool",
      "constructor": "constructor(address _stabilityPool, address _stakeToken) {\n        stabilityPool = IStabilityPool(_stabilityPool);\n        stakeToken = IERC20(_stakeToken);\n    }",
      "function": "constructor",
      "ref_name": "ReenterStabilityPool",
      "params": [
        {
          "name": "_stabilityPool",
          "value": "address(StabilityPool)",
          "type": "val"
        },
        {
          "name": "_stakeToken",
          "value": "address(DFIDToken)",
          "type": "val"
        }
      ]
    },
    {
      "type": "deploy",
      "contract": "MockDebtContract",
      "constructor": "constructor(address _stakingToken) {\n        stakingToken = IERC20(_stakingToken);\n    }",
      "function": "constructor",
      "ref_name": "MockDebtContract",
      "params": [
        {
          "name": "_stakingToken",
          "value": "address(DFIDToken)",
          "type": "val"
        }
      ]
    },
    {
      "type": "deploy",
      "contract": "TestMath",
      "constructor": "null",
      "function": "constructor",
      "ref_name": "TestMath",
      "params": []
    },
    {
      "type": "deploy",
      "contract": "MockPriceOracle",
      "constructor": "constructor() Ownable(msg.sender) {}",
      "function": "constructor",
      "ref_name": "MockPriceOracle",
      "params": []
    },
    {
      "type": "call",
      "contract": "DFIREToken",
      "constructor": "null",
      "function": "setAddresses",
      "ref_name": "DFIREToken",
      "params": [
        {
          "name": "_stabilityPool",
          "value": "address(StabilityPool)",
          "type": "val"
        }
      ]
    },
    {
      "type": "call",
      "contract": "StabilityPool",
      "constructor": "null",
      "function": "setAddresses",
      "ref_name": "StabilityPool",
      "params": [
        {
          "name": "_stakingToken",
          "value": "address(DFIDToken)",
          "type": "val"
        },
        {
          "name": "_stableBaseCDP",
          "value": "address(StableBaseCDP)",
          "type": "val"
        },
        {
          "name": "_sbrToken",
          "value": "address(DFIREToken)",
          "type": "val"
        }
      ]
    },
    {
      "type": "call",
      "contract": "StableBaseCDP",
      "constructor": "null",
      "function": "setAddresses",
      "ref_name": "StableBaseCDP",
      "params": [
        {
          "name": "_sbdToken",
          "value": "address(DFIDToken)",
          "type": "val"
        },
        {
          "name": "_priceOracle",
          "value": "address(MockPriceOracle)",
          "type": "val"
        },
        {
          "name": "_stabilityPool",
          "value": "address(StabilityPool)",
          "type": "val"
        },
        {
          "name": "_dfireTokenStaking",
          "value": "address(DFIREStaking)",
          "type": "val"
        },
        {
          "name": "_safesOrderedForLiquidation",
          "value": "address(OrderedDoublyLinkedList)",
          "type": "val"
        },
        {
          "name": "_safesOrderedForRedemption",
          "value": "address(OrderedDoublyLinkedList)",
          "type": "val"
        }
      ]
    },
    {
      "type": "call",
      "contract": "DFIDToken",
      "constructor": "null",
      "function": "setAddresses",
      "ref_name": "DFIDToken",
      "params": [
        {
          "name": "_stableBaseCDP",
          "value": "address(StableBaseCDP)",
          "type": "val"
        }
      ]
    },
    {
      "type": "call",
      "contract": "OrderedDoublyLinkedList",
      "constructor": "null",
      "function": "setAddresses",
      "ref_name": "OrderedDoublyLinkedList",
      "params": [
        {
          "name": "_stableBaseCDP",
          "value": "address(StableBaseCDP)",
          "type": "val"
        }
      ]
    },
    {
      "type": "call",
      "contract": "DFIREStaking",
      "constructor": "null",
      "function": "setAddresses",
      "ref_name": "DFIREStaking",
      "params": [
        {
          "name": "_stakingToken",
          "value": "address(DFIDToken)",
          "type": "val"
        },
        {
          "name": "_rewardToken",
          "value": "address(DFIREToken)",
          "type": "val"
        },
        {
          "name": "_stableBaseContract",
          "value": "address(StableBaseCDP)",
          "type": "val"
        }
      ]
    }
  ]
}